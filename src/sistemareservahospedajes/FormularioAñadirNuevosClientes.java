/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemareservahospedajes;

import Controller.Cliente;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Alejandro
 */
public class FormularioAñadirNuevosClientes extends javax.swing.JFrame {

    
    /**
     * Creates new form FormularioAñadirNuevosClientes
     */
    List<Cliente> listaClientes = new ArrayList<Cliente>();
    FormularioEditarCliente fEditarCliente = new FormularioEditarCliente();
    FormularioReserva fReserva = new FormularioReserva();
    
    
    public FormularioAñadirNuevosClientes() {
        initComponents();
        setLocationRelativeTo(null);
        leerVentanaParaModificar();
        leeDatosCliente();
        
    }
    public static int ultimaCantidad = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtApellidosCliente = new javax.swing.JTextField();
        txtDniCliente = new javax.swing.JTextField();
        txtTelefonoCliente = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellidos:");

        jLabel3.setText("DNI:");

        jLabel4.setText("Telefono:");

        jLabel5.setText("Formulario cliente");

        txtNombreCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreClienteActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(txtApellidosCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(btnGuardar)
                .addGap(61, 61, 61)
                .addComponent(btnCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGuardar))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        if(fEditarCliente.texto == "AñadirCliente")
        {
            fEditarCliente.texto = "";
            fEditarCliente.setVisible(true);   
            this.dispose();
        }
        if(fEditarCliente.textoModificar == "ModificarCliente")
        {
            fEditarCliente.textoModificar = "";
            fEditarCliente.setVisible(true);
            this.dispose();
        }
        if(fReserva.texto2 == "ReservaHabitacion")
        {
            fReserva.texto2 = "";
            fReserva.setVisible(true);
            this.dispose();
            
        }        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNombreClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreClienteActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        boolean bandera = false;
        String nombre = txtNombreCliente.getText();
        String apellidos = txtApellidosCliente.getText();
        String dni = txtDniCliente.getText();
        String telefono = txtTelefonoCliente.getText();
        //toma el ultimo valor que esta en el archivo que sirva para poder actualizar la tabla
        ultimaCantidad = this.listaClientes.size();
        Cliente cliente = new Cliente(nombre,apellidos,dni,telefono);
        
        if(fEditarCliente.texto == "AñadirCliente")
        {
            /*Aqui realizaremos el codigo para hacer que los datos no se repitan*/
            for(int i=0;i<this.listaClientes.size();i++)
            {
                if(dni.equals(listaClientes.get(i).getDni()))//el dni del textfield será comparado con todos los dni
                {//que se encuentran en la lista si un numero de dni se repite
                    bandera = true;//la bandera solo será true si aquel dni que se escribio en el txt es el mismo para la lista           
                }
            }
            if(bandera==false)
            {                             
                fEditarCliente.listaClientes.add(cliente);
                
                JOptionPane.showMessageDialog(this, "Se ha añadido correctamente el nuevo cliente.");
                fEditarCliente.texto = "";
                fEditarCliente.generaArchivoCliente();
                cliente.setCodigoCliente(String.valueOf(ultimaCantidad+1));    
                //se llama al modeloTabla del formulario editar cliente 
                //para actualizar la tabla cada vez que se agrege un nuevo cliente
                fEditarCliente.modeloTabla.insertRow(ultimaCantidad, new Object[]{});
                fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(ultimaCantidad).getCodigoCliente(), ultimaCantidad, 0);
                fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(ultimaCantidad).getNombre(), ultimaCantidad, 1);
                fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(ultimaCantidad).getApellidos(), ultimaCantidad, 2);
                fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(ultimaCantidad).getDni(), ultimaCantidad, 3);
                fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(ultimaCantidad).getTelefono(), ultimaCantidad, 4);
                fEditarCliente.setVisible(true);
                this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(this, "EL DNI SE REPITE, INTENTA PONER OTRO DNI.");
            }
        }
        if(fEditarCliente.textoModificar == "ModificarCliente")
        {
            fEditarCliente.listaClientes.set(fEditarCliente.fila, cliente);
            fEditarCliente.generaArchivoCliente();
            cliente.setCodigoCliente(String.valueOf(fEditarCliente.fila+1)); 
            fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(fEditarCliente.fila).getCodigoCliente(), fEditarCliente.fila, 0);
            fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(fEditarCliente.fila).getNombre(), fEditarCliente.fila, 1);
            fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(fEditarCliente.fila).getApellidos(), fEditarCliente.fila, 2);
            fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(fEditarCliente.fila).getDni(), fEditarCliente.fila, 3);
            fEditarCliente.modeloTabla.setValueAt(fEditarCliente.listaClientes.get(fEditarCliente.fila).getTelefono(), fEditarCliente.fila, 4);
            JOptionPane.showMessageDialog(this, "Se ha añadido correctamente el nuevo cliente.");
            fEditarCliente.textoModificar = "";
            fEditarCliente.setVisible(true);
            this.dispose();
        }
        if(fReserva.texto2 == "ReservaHabitacion")
        {
            for(int i=0;i<this.listaClientes.size();i++)
            {
                if(dni.equals(listaClientes.get(i).getDni()))
                {
                    bandera = true;  
                }
            }
            
            if(bandera==false)
            {                             
                fReserva.listaClientes.add(cliente);  
                //se llama al modeloTabla del formulario editar cliente 
                //para actualizar la tabla cada vez que se agrege un nuevo cliente
                fReserva.generaArchivoCliente();
                
                fReserva.texto2 = "";
                cliente.setCodigoCliente(String.valueOf(ultimaCantidad+1));  
                JOptionPane.showMessageDialog(this, "Se ha añadido correctamente el nuevo cliente.");
                fReserva.modeloTabla.insertRow(ultimaCantidad, new Object[]{});
                fReserva.modeloTabla.setValueAt(fReserva.listaClientes.get(ultimaCantidad).getCodigoCliente(), ultimaCantidad, 0);
                fReserva.modeloTabla.setValueAt(fReserva.listaClientes.get(ultimaCantidad).getNombre(), ultimaCantidad, 1);
                fReserva.modeloTabla.setValueAt(fReserva.listaClientes.get(ultimaCantidad).getApellidos(), ultimaCantidad, 2);
                fReserva.modeloTabla.setValueAt(fReserva.listaClientes.get(ultimaCantidad).getDni(), ultimaCantidad, 3);
                fReserva.modeloTabla.setValueAt(fReserva.listaClientes.get(ultimaCantidad).getTelefono(), ultimaCantidad, 4);
                
                fReserva.setVisible(true);
                this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(this, "EL DNI SE REPITE, INTENTA PONER OTRO DNI.");
            }
        }               
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioAñadirNuevosClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtApellidosCliente;
    private javax.swing.JTextField txtDniCliente;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtTelefonoCliente;
    // End of variables declaration//GEN-END:variables
    
    
    public void generaArchivoCliente() {
        try{
            PrintWriter writer = new PrintWriter("DatosClientes.txt");
            
            for(int i=0; i<this.listaClientes.size();i++){
                writer.println("Cliente "+(i+1));
                writer.println(i+1);
                writer.println(this.listaClientes.get(i).getNombre());
                writer.println(this.listaClientes.get(i).getApellidos());
                writer.println(this.listaClientes.get(i).getDni());
                writer.println(this.listaClientes.get(i).getTelefono());
            }
            
            writer.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en el sistema");
            e.printStackTrace();
        }
    
    }
    
    public void leeDatosCliente() {
        try{
            String codigo = "";
            String nombre = "";
            String apellidos = "";
            String dni = "";
            String telefono = "";
            

            File archivo = new File("DatosClientes.txt");
            FileReader fr = new FileReader(archivo);
            BufferedReader br = new BufferedReader(fr);   

            String lineaCurso1;
            String lineaCurso2;
            //si no hay nada para leer en el archivo txt, entonces esta parte se omitirá
            //hasta que por fin se agregue los datos de los clientes y se guarden en el archivo
            if((lineaCurso1=br.readLine()) != null)
            {   
                while((lineaCurso2=br.readLine())!=null)
                {
                    Cliente cliente = new Cliente(codigo,nombre,apellidos,dni,telefono);
                    cliente.setCodigoCliente(lineaCurso2);
                    cliente.setNombre(br.readLine());
                    cliente.setApellidos(br.readLine());
                    cliente.setDni(br.readLine());
                    cliente.setTelefono(br.readLine());
                    this.listaClientes.add(cliente);
                    br.readLine();         
                }
                fr.close();    
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en el sistema");
            e.printStackTrace();
        }
    }
    
    public void leerVentanaParaModificar()
    {
        if(fEditarCliente.textoModificar == "ModificarCliente")
        {
            txtNombreCliente.setText(fEditarCliente.nombreModificar);
            txtApellidosCliente.setText(fEditarCliente.apellidosModificar);
            txtDniCliente.setText(fEditarCliente.dniModificar);
            txtTelefonoCliente.setText(fEditarCliente.telefonoModificar);
        }
        
    }

}
