/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Reportes;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import Controller.Cliente;
import sistemareservahospedajes.Menu;

/**
 *
 * @author DELL
 */
public class FormularioGenerarReportes extends javax.swing.JFrame {

    /**
     * Creates new form FormularioGenerarReportes
     */
    
    List<Cliente> listaReservas = new ArrayList<Cliente>();
    List<Cliente> listaClientesFrecuentes = new ArrayList<Cliente>();
    
    public FormularioGenerarReportes() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDniComprobar = new javax.swing.JTextField();
        btnVerificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrese el DNI a verificar:");

        btnVerificar.setText("Verificar");
        btnVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtDniComprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnVerificar)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDniComprobar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnVerificar)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarActionPerformed
        leerArchivoReservas();
        

            String dniComprobar = txtDniComprobar.getText();
            contarCantidadVisitas(dniComprobar);
            Menu menu = new Menu();
            menu.setVisible(true);
            this.dispose();

    }//GEN-LAST:event_btnVerificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioGenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioGenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioGenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioGenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioGenerarReportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtDniComprobar;
    // End of variables declaration//GEN-END:variables

    private void leerArchivoReservas() {
        try{
            File archivo =new File("DatosReservaHabitacion.txt");
            FileReader fr = new FileReader(archivo);
            BufferedReader br = new BufferedReader(fr);
            
           
            String linea;
            while((linea = br.readLine()) !=null){
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
                
                br.readLine();
                
                String nombre = br.readLine();
                String apellido = br.readLine();
                String dni = br.readLine();
                String telefono = br.readLine();
               
                br.readLine();
                                  
               Cliente cliente = new Cliente(nombre,apellido,dni,telefono);
               this.listaReservas.add(cliente);
               
            } fr.close();
                        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al leer Archivo");
            e.printStackTrace();
        }        
    }

    private void contarCantidadVisitas(String dniComprobar) {
        int contador = 0;
        int posicion = 0;
        
        for(int i=0; i<listaReservas.size(); i++){
            String dniReserva = this.listaReservas.get(i).getDni();
            //JOptionPane.showMessageDialog(null, "DNI: " + dniReserva);
                if(dniComprobar.equals(dniReserva)){
                    contador++;
                    posicion = i;
                } 
            }
        
        String nombre = this.listaReservas.get(posicion).getNombre();
        String apellido = this.listaReservas.get(posicion).getApellidos();
        String dni = this.listaReservas.get(posicion).getDni();
        String telefono = this.listaReservas.get(posicion).getTelefono();
                    
        Cliente cliente = new Cliente(nombre,apellido,dni,telefono);
        this.listaClientesFrecuentes.add(cliente);
                    
        //System.out.println("DNI: " + dniReserva);
        System.out.println("Posicion: " + posicion);
        System.out.println("VECES: " + contador);
                
        if(contador>=2){
            JOptionPane.showMessageDialog(null, "Es un cliente frecuente");
            generarReporteClientesFrecuentes(dniComprobar);
        }else{
            JOptionPane.showMessageDialog(null, "No es un cliente frecuente");
        } 
    }

    private void generarReporteClientesFrecuentes(String dni) {
        try{
            PrintWriter writer = new PrintWriter("ReporteClientesFrecuentes.csv");
            
            writer.append("DNI").append(";");
            writer.append("NOMBRE").append(";");
            writer.append("APELLIDOS").append(";");
            writer.append("TELEFONO").append("\n");
                   
            for(int i=0; i<listaClientesFrecuentes.size(); i++){
                writer.append(this.listaClientesFrecuentes.get(i).getDni() + ";");
                writer.append(this.listaClientesFrecuentes.get(i).getNombre()+ ";");
                writer.append(this.listaClientesFrecuentes.get(i).getApellidos()+ ";");
                writer.append(this.listaClientesFrecuentes.get(i).getTelefono() + "\n");
            }
            
            writer.close();            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Â¡Hubo un ERROR al generar el reporte!");
            e.printStackTrace();
        }
    }

}
